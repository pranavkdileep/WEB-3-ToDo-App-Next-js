"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/AxaRYko3iX9
 */
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Checkbox } from "@/components/ui/checkbox"
import { Label } from "@/components/ui/label"
import { useState,useEffect } from "react"
import { addAtask } from "@/Backend/Api"
import { useSDK, MetaMaskProvider } from "@metamask/sdk-react";
import detectEthereumProvider from '@metamask/detect-provider';



export function MainComponent({tasks}) {
 
  const { sdk, connected, connecting } = useSDK();

  const [account, setAccount] = useState(null);

  const connect = async () => {
    const provider = await detectEthereumProvider();
    if (provider) {
      try {
        const accounts = await provider.request({ method: 'eth_requestAccounts' });
        const account = accounts[0];
        setAccount(account);
      } catch (err) {
        console.warn(`No accounts found`, err);
      }
    } else {
      console.log('Please install MetaMask!');
    }
  };

  useEffect(() => {
    connect();
  }, []);

  useEffect(() => {
    if (account) {
      console.log(`Connected to ${account}`);
    }
  }, [account]);

  const [task, setTask] = useState('')
  const handletaskchange = (event) => {
    setTask(event.target.value)
    console.log(task)
  }
  const handletaskadd = (event) => {
    event.preventDefault()
    addAtask(task)
    console.log(task)
  }

  return (
    (<div
      className="flex flex-col items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900">
      <header
        className="mb-10 flex justify-between w-full max-w-md mx-auto px-4 md:px-6">
        <h1 className="text-4xl font-bold text-gray-900 dark:text-gray-100">Todo App</h1>
        <Button className="ml-auto" variant="outline" onClick={connect}>
          {account ? account : 'Connect'}
        </Button>
      </header>
      <main className="w-full max-w-md mx-auto">
        <div className="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
          <form className="space-y-4">
            <Input onChange={
              event => handletaskchange(event)
            }className="w-full" id="new-task" placeholder="Add a new task" type="text"/>
            <Button className="w-full" type="submit" onClick={
             event => handletaskadd(event)
            }>
              Add Task
            </Button>
          </form>
          <ul className="mt-4 space-y-4">
          {
            
              tasks.map((task,index) => (
              <li
                key={index}
                className="flex items-center justify-between">
                <Checkbox id={`task-${index}`} />
                <Label htmlFor={`task-${index}`}>{task[1]}</Label>
                <Button variant="icon">
                  <TrashIcon />
                </Button>
              </li>
              
              ))
            
          }

          </ul>
          <Button className="w-full mt-6" variant="outline">
            Clear All
          </Button>
        </div>
      </main>
    </div>)
  );
}


function TrashIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M3 6h18" />
      <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" />
      <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" />
    </svg>)
  );
}
